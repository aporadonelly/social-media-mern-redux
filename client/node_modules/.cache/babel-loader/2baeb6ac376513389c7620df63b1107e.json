{"ast":null,"code":"import axios from 'axios';\nimport alert, { setAlert } from './alert';\nimport { REGISTER_FAIL, REGISTER_SUCCESS, USER_LOADED, AUTH_ERROR } from './types';\nimport setAuthToken from '../utils/setAuthToken'; //LOAD USER\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    set;\n  }\n}; //Register a user\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    name,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/nellyaporado/Documents/sample_projects/social-media-app-mern-redux/client/src/actions/auth.js"],"names":["axios","alert","setAlert","REGISTER_FAIL","REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","set","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,SAAhC;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,SALP;AAOA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9C,MAAGC,YAAY,CAACC,KAAhB,EAAsB;AAClBC,IAAAA,GAAG;AACN;AACJ,CAJM,C,CAMP;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAOP,QAAP,IAAoB;AACzE,QAAMQ,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA,KAAF;AAASD,IAAAA,IAAT;AAAeE,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMtB,KAAK,CAACuB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAR,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAEpB,gBADC;AAEPqB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWtB,QAAQ,CAACP,QAAQ,CAAC6B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AAEDvB,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAErB;AADC,KAAD,CAAR;AAGD;AACF,CA3BM","sourcesContent":["import axios from 'axios';\nimport alert, { setAlert } from './alert';\nimport {\n  REGISTER_FAIL,\n  REGISTER_SUCCESS,\n  USER_LOADED,\n  AUTH_ERROR,\n} from './types';\n\nimport setAuthToken from '../utils/setAuthToken';\n\n//LOAD USER\nexport const loadUser = () => async (dispatch) => {\n    if(localStorage.token){\n        set\n    }\n};\n\n//Register a user\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, name, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}