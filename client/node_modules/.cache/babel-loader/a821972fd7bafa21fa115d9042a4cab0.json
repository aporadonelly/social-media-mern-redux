{"ast":null,"code":"import { REGISTER_FAIL, REGISTER_SUCCESS, USER_LOADED, AUTH_ERROR } from '../actions/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  user: null\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return { ...state,\n        token: localStorage.setItem('token', payload.token),\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case REGISTER_FAIL:\n      return { ...state,\n        isAuthenticated: false,\n        loading: true,\n        token: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/nellyaporado/Documents/sample_projects/social-media-app-mern-redux/client/src/reducers/auth.js"],"names":["REGISTER_FAIL","REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","initialState","token","localStorage","getItem","isAuthenticated","loading","user","state","action","type","payload","setItem"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,kBALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,KAFE;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKZ,gBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELN,QAAAA,KAAK,EAAEC,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BD,OAAO,CAACT,KAAtC,CAFF;AAGLG,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF,SAAKT,aAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,eAAe,EAAE,KAFZ;AAGLC,QAAAA,OAAO,EAAE,IAHJ;AAILJ,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAOF;AACE,aAAOM,KAAP;AAlBJ;AAoBD","sourcesContent":["import {\n  REGISTER_FAIL,\n  REGISTER_SUCCESS,\n  USER_LOADED,\n  AUTH_ERROR,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        token: localStorage.setItem('token', payload.token),\n        isAuthenticated: true,\n        loading: false,\n      };\n\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isAuthenticated: false,\n        loading: true,\n        token: null,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}