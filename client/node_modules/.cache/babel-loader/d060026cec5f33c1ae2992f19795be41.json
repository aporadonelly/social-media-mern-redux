{"ast":null,"code":"var _jsxFileName = \"/Users/nellyaporado/Documents/sample_projects/social-media-app-mern-redux/client/src/components/routing/PrivateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}));\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.o.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/nellyaporado/Documents/sample_projects/social-media-app-mern-redux/client/src/components/routing/PrivateRoute.js"],"names":["React","PropTypes","connect","Route","Redirect","PrivateRoute","auth","isAuthenticated","loading","component","Component","rest","props","propTypes","o","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GADc;AAEpBC,EAAAA,SAAS,EAAEC,SAFS;AAGpB,KAAGC;AAHiB,CAAD,kBAKnB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IACN,CAACL,eAAD,IAAoB,CAACC,OAArB,gBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBAGE,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GALF;;AAiBAP,YAAY,CAACQ,SAAb,GAAyB;AACvBP,EAAAA,IAAI,EAAEL,SAAS,CAACa,CAAV,CAAYC;AADK,CAAzB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADsB,CAAZ,CAAxB;;AAGA,eAAeJ,OAAO,CAACc,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  auth: { isAuthenticated, loading },\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.o.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}